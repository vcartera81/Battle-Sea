@using BattleSea.Models
@using BattleSea.Models.Enums
@model Game
<html>
<head>
    <title>Sea Battle</title>
    <style type="text/css">
        body, html {
            padding: 0;
            margin: 0;
            color: #595959;
            font-family: Roboto;
        }

        .battle {
            overflow: hidden;
        }

        .section {
            width: 50%;
            height: 600px;
            float: left;
            overflow: hidden;
            position: relative;
        }

        .battlefield-cell {
            position: absolute;
            background-color: #eee;
            border: 1px solid #fff;
        }

            /* Ship Deck */
            .battlefield-cell[data-value='1'] {
                background-color: #2e9f76;
            }

            /* Shot */
            .battlefield-cell[data-value='2'], .battlefield-cell[data-value='5'] {
                background-color: #5b6461;
            }

            /* Exploded */

            .battlefield-cell[data-value='3'] {
                background-color: #e15969;
            }

            /*#mine {
            padding: 20px;
        }*/

            .battlefield-cell[data-value='4'] {
                background-color: #d1e8ff;
            }

        .fieldArea {
            width: 100%;
            height: 100%;
            padding: 40px;
            position: absolute;
            overflow: hidden;
            box-sizing: border-box;
        }

        .span-button {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            cursor: pointer;
            display: block;
            border: 1px solid #cccccc;
            padding: 6px;
            border-radius: 4px;
            font-weight: 500;
        }

            .span-button:hover {
                background-color: #ccc;
                color: white;
                border: none;
            }

        .whom-label {
            position: absolute;
            top: 5px;
            display: block;
            width: 100%;
            text-align: center;
            font-weight: 900;
            font-size: 25px;
        }

        .tr-mesh {
            width: 100%;
            height: 100%;
            position: absolute;
            z-index: 55;
        }

        .cell-selectable {
            cursor: pointer;
        }

            .cell-selectable:hover {
                opacity: 0.6;
            }
    </style>
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,400italic,500italic,700italic,700,900,900italic,300italic,300,100italic,100" rel="stylesheet" type="text/css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>

    <script src="/Scripts/jquery.signalR-2.2.0.js"></script>
    <script src="/signalr/hubs"></script>

    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css">
    @*<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>*@
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.0.4/angular.js">
    </script>
</head>
<body ng-app="battleSea">
    <div class="battle" ng-controller="seaBattleController">
        <div class="section" id="mine">
            <span class="whom-label">You</span>
            <div class="fieldArea">

            </div>
            @if (Model.State == GameState.Initialized)
            {
                <span id="shuffleBtn" onclick="shuffleShips()" class="span-button" style="position: absolute; bottom: 0; margin-left: 40%;">Reposition</span>
            }
        </div>
        <div class="section" id="theirs">
            <div class="tr-mesh" style="display: none;"></div>
            <span class="whom-label">Opponent</span>
            <div class="fieldArea">

            </div>
        </div>
    </div>
    @if (Model.State == GameState.Initialized)
    {
        <span id="startGameBtn" class="span-button" onclick="startGame()" style="display: inline-block; margin-left: 49%; position: absolute;">Start game!</span>
    }

    <script type="text/javascript">
        $.connection.hub.start().done(function (hub) {
            //register player
            $.ajax({
                type: "POST",
                url: "@Url.Action("RegisterPlayer")",
                data: JSON.stringify({ connection: hub.id }),
                dataType: "json",
                contentType: "application/json; charset=utf-8"
            });
        });

        $.connection.battleSeaHub.client.opponentFire = function (fireResult) {
            $("#mine .battlefield-cell[data-column=" + fireResult.coordinate.Column + "][data-row=" + fireResult.coordinate.Row + "]").attr("data-value", fireResult.fireResult.State);
        };

        $.connection.battleSeaHub.client.lockField = function () {
            $("#theirs").animate({ "opacity": "0.5" }, 500);
            $(".tr-mesh").show();
        }

        $.connection.battleSeaHub.client.unlockField = function () {
            $("#theirs").animate({ "opacity": "1" }, 500);
            $(".tr-mesh").hide();
        }

        $.connection.battleSeaHub.client.surroundShip = function (sCells) {
            $.each(sCells, function (index, item) {
                $("#theirs .battlefield-cell[data-column=" + item.Coordinate.Column + "][data-row=" + item.Coordinate.Row + "]").attr("data-value", item.State);
            });
        }

        $.connection.battleSeaHub.client.endGame = function (isWinner) {
            debugger;
        }

        var battleSea = angular.module("battleSea", []);

        battleSea.controller("seaBattleController", ["$scope", "$http", function ($scope, $http) {
            $http.post("@Url.Action("GetCurrentBattlefield")").then(function (data) {
                debugger;
            });
        }]);
    </script>
</body>
</html>
